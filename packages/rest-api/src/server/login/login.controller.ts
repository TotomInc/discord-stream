import { DiscordAPI } from '@discord-stream/models';
import { Request, Response, NextFunction } from 'express';
import axios from 'axios';
import querystring from 'querystring';

import { config } from '../../config/env';

/**
 * Called when reaching `api/login`, generate a link to Discord OAuth
 * authorization page, then redirect to `api/login/callback` to handle the
 * OAuth code.
 *
 * @param req Express request
 * @param res Express response
 * @param next Express next-function
 */
export function oauth(req: Request, res: Response, next: NextFunction) {
  const baseURL = `${req.protocol}://${req.get('host')!}`;

  const oauthParams = querystring.stringify({
    response_type: 'code',
    client_id: config.bot.userID,
    scope: 'identify guilds',
    redirect_uri: `${baseURL}/api/login/callback`,
  });

  res.redirect(`https://discordapp.com/api/oauth2/authorize?${oauthParams}`);
}

/**
 * Handle the OAuth code generated by Discord. Use this code to authenticate
 * the user and fetch his access-tokens. Once access-tokens have been fetched,
 * we redirect the user to the web-interface with tokens as query parameters.
 *
 * @param req Express request
 * @param res Express response
 * @param next Express next-function
 */
export function oauthCallback(req: Request, res: Response, next: NextFunction) {
  const code = req.query['code'] as string;

  retrieveDiscordTokens(req, code)
    .then((tokens) => {
      const query = querystring.stringify({ ...tokens });

      res.redirect(`${config.interfaceURI}?${query}`);
    })
    .catch(err => next(err));
}

/**
 * Fetch Discord auth-tokens using a OAuth code for a specific user.
 *
 * @param code oauth code generated by Discord
 */
function retrieveDiscordTokens(originalReq: Request, code: string): Promise<DiscordAPI.DiscordUserTokens> {
  const baseURL = `${originalReq.protocol}://${originalReq.get('host')!}`;

  const headers = {
    'Content-Type': 'application/x-www-form-urlencoded',
  };

  const data = querystring.stringify({
    code,
    client_id: config.bot.userID,
    client_secret: config.secrets.discord,
    grant_type: 'authorization_code',
    redirect_uri: `${baseURL}/api/login/callback`,
    scope: 'identify guilds',
  });

  return axios
    .post<DiscordAPI.DiscordUserTokens>(
      'https://discordapp.com/api/oauth2/token',
      data,
      { headers }
    )
    .then(response => response.data)
    .catch(err => err);
}
